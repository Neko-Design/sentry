// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ProjectTeamsSettings render() renders 1`] = `
.glamor-62 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  height: 40px;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  margin-bottom: 1em;
}

.glamor-0 {
  padding: 0.5em;
  margin-right: 5px;
  width: 80px;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.glamor-4 {
  display: block;
  width: 100%;
  background: #fff;
  border: 1px solid;
  box-shadow: inset;
  padding: 0.5em;
  -webkit-transition: border 0.1s linear;
  transition: border 0.1s linear;
  resize: vertical;
  padding: 0.5em;
  margin-right: 5px;
}

.glamor-4 {
  display: block;
  width: 100%;
  background: #fff;
  border: 1px solid;
  box-shadow: inset;
  padding: 0.5em;
  -webkit-transition: border 0.1s linear;
  transition: border 0.1s linear;
  resize: vertical;
  padding: 0.5em;
  margin-right: 5px;
}

.glamor-4 {
  display: block;
  width: 100%;
  background: #fff;
  border: 1px solid;
  box-shadow: inset;
  padding: 0.5em;
  -webkit-transition: border 0.1s linear;
  transition: border 0.1s linear;
  resize: vertical;
  padding: 0.5em;
  margin-right: 5px;
}

.glamor-4 {
  display: block;
  width: 100%;
  background: #fff;
  border: 1px solid;
  box-shadow: inset;
  padding: 0.5em;
  -webkit-transition: border 0.1s linear;
  transition: border 0.1s linear;
  resize: vertical;
  padding: 0.5em;
  margin-right: 5px;
}

.glamor-4:focus {
  outline: none;
}

.glamor-4:hover,
.glamor-4:focus,
.glamor-4:active {
  border: 1px solid;
}

.glamor-9 {
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  margin-right: 5px;
}

.glamor-7 {
  vertical-align: middle;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  margin-right: 5px;
}

.glamor-43 {
  box-sizing: border-box;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.glamor-39 {
  position: relative;
  display: inline-block;
}

.glamor-35 {
  margin-right: 5px;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  white-space: nowrap;
  height: 37px;
}

.glamor-35 .button-label {
  text-size: 14px;
  padding: 2px 12px;
}

.glamor-27 {
  position: relative;
  z-index: 2;
  box-shadow: none;
  margin-right: 5px;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  white-space: nowrap;
  height: 37px;
}

.glamor-27 .button-label {
  text-size: 14px;
  padding: 2px 12px;
}

.glamor-24 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.glamor-13 {
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.glamor-13 span {
  margin-right: 2px;
}

.glamor-13 .avatar {
  width: 28px;
  height: 28px;
}

.glamor-18 {
  margin-left: 0.33em;
}

.glamor-16 {
  vertical-align: middle;
  margin-left: 0.33em;
}

.glamor-58 {
  width: 37px;
  height: 37px;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.glamor-58 .button-label {
  padding: 0.5em;
}

.glamor-58 div {
  margin: 0px !important;
}

.glamor-52 {
  box-sizing: border-box;
  margin-right: 8px;
  margin-left: -2px;
}

.glamor-48 {
  display: block;
}

.glamor-46 {
  vertical-align: middle;
  display: block;
}

.glamor-66 {
  text-align: end;
  padding-top: 10px;
}

<OwnerInput
  initialText="url:src @dummy@example.com"
  organization={
    Object {
      "access": Array [
        "org:read",
        "org:write",
        "org:admin",
        "project:read",
        "project:write",
        "project:admin",
        "team:read",
        "team:write",
        "team:admin",
      ],
      "features": Array [],
      "id": "3",
      "name": "Organization Name",
      "onboardingTasks": Array [],
      "projects": Array [],
      "slug": "org-slug",
      "status": Object {
        "id": "active",
        "name": "active",
      },
      "teams": Array [],
    }
  }
  params={
    Object {
      "orgId": "org-slug",
      "projectId": "project-slug",
    }
  }
  project={
    Object {
      "hasAccess": true,
      "id": "2",
      "isBookmarked": false,
      "isMember": true,
      "name": "Project Name",
      "slug": "project-slug",
      "teams": Array [],
    }
  }
>
  <RuleBuilder
    onAddRule={[Function]}
    organization={
      Object {
        "access": Array [
          "org:read",
          "org:write",
          "org:admin",
          "project:read",
          "project:write",
          "project:admin",
          "team:read",
          "team:write",
          "team:admin",
        ],
        "features": Array [],
        "id": "3",
        "name": "Organization Name",
        "onboardingTasks": Array [],
        "projects": Array [],
        "slug": "org-slug",
        "status": Object {
          "id": "active",
          "name": "active",
        },
        "teams": Array [],
      }
    }
    project={
      Object {
        "hasAccess": true,
        "id": "2",
        "isBookmarked": false,
        "isMember": true,
        "name": "Project Name",
        "slug": "project-slug",
        "teams": Array [],
      }
    }
  >
    <BuilderBar>
      <div
        className="glamor-62 glamor-63"
      >
        <BuilderSelect
          onChange={[Function]}
          value="path"
        >
          <SelectInput
            className="glamor-0 glamor-1"
            disabled={false}
            multiple={false}
            onChange={[Function]}
            placeholder="Select an option..."
            required={false}
            value="path"
          >
            <select
              className="glamor-0 glamor-1"
              disabled={false}
              multiple={false}
              onChange={[Function]}
              placeholder="Select an option..."
              required={false}
              value="path"
            >
              <option
                value="path"
              >
                Path
              </option>
              <option
                value="url"
              >
                URL
              </option>
            </select>
          </SelectInput>
        </BuilderSelect>
        <BuilderInput
          controlled={true}
          onChange={[Function]}
          placeholder="src/example/*"
          value=""
        >
          <input
            className="glamor-4 glamor-5"
            onChange={[Function]}
            placeholder="src/example/*"
            value=""
          />
        </BuilderInput>
        <Divider
          src="icon-chevron-right"
        >
          <InlineSvg
            className="glamor-9 glamor-6"
            src="icon-chevron-right"
          >
            <StyledSvg
              className="glamor-9 glamor-6"
              height="1em"
              style={Object {}}
              viewBox={Object {}}
              width="1em"
            >
              <svg
                className="glamor-6 glamor-7 glamor-8"
                height="1em"
                style={Object {}}
                viewBox={Object {}}
                width="1em"
              >
                <use
                  href="#test"
                  xlinkHref="#test"
                />
              </svg>
            </StyledSvg>
          </InlineSvg>
        </Divider>
        <Flex
          align="center"
          flex="1"
        >
          <Base
            align="center"
            className="glamor-43"
            flex="1"
          >
            <div
              className="glamor-43"
              is={null}
            >
              <DropdownAutoComplete
                alignMenu="right"
                items={
                  Array [
                    Object {
                      "items": Array [],
                      "label": "Teams",
                      "value": "team",
                    },
                    Object {
                      "items": Array [],
                      "label": "Users",
                      "value": "user",
                    },
                  ]
                }
                onSelect={[Function]}
              >
                <DropdownAutoCompleteMenu
                  alignMenu="right"
                  items={
                    Array [
                      Object {
                        "items": Array [],
                        "label": "Teams",
                        "value": "team",
                      },
                      Object {
                        "items": Array [],
                        "label": "Users",
                        "value": "user",
                      },
                    ]
                  }
                  onSelect={[Function]}
                >
                  <AutoComplete
                    itemToString={[Function]}
                    onSelect={[Function]}
                  >
                    <DropdownMenu
                      isOpen={false}
                      keepMenuOpen={false}
                      onClickOutside={[Function]}
                    >
                      <AutoCompleteRoot>
                        <Component
                          className="glamor-39 glamor-40"
                        >
                          <div
                            className="glamor-39 glamor-40"
                          >
                            <div
                              onClick={[Function]}
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                              role="button"
                            >
                              <BuilderDropdownButton
                                isOpen={false}
                              >
                                <DropdownButton
                                  className="glamor-35 glamor-26"
                                  isOpen={false}
                                >
                                  <StyledButton
                                    className="glamor-35 glamor-26"
                                    isOpen={false}
                                  >
                                    <Component
                                      className="glamor-26 glamor-27 glamor-28"
                                      isOpen={false}
                                    >
                                      <Button
                                        className="glamor-26 glamor-27 glamor-28"
                                        disabled={false}
                                      >
                                        <button
                                          className="glamor-26 glamor-27 glamor-28 button button-default"
                                          disabled={false}
                                          onClick={[Function]}
                                          role="button"
                                        >
                                          <Flex
                                            align="center"
                                            className="button-label"
                                          >
                                            <Base
                                              align="center"
                                              className="button-label glamor-24"
                                            >
                                              <div
                                                className="button-label glamor-24"
                                                is={null}
                                              >
                                                <Owners>
                                                  <div
                                                    className="glamor-13 glamor-14"
                                                  />
                                                </Owners>
                                                Add Owners
                                                <StyledChevronDown>
                                                  <Component
                                                    className="glamor-18 glamor-15"
                                                  >
                                                    <InlineSvg
                                                      className="glamor-18 glamor-15"
                                                      src="icon-chevron-down"
                                                    >
                                                      <StyledSvg
                                                        className="glamor-18 glamor-15"
                                                        height="1em"
                                                        style={Object {}}
                                                        viewBox={Object {}}
                                                        width="1em"
                                                      >
                                                        <svg
                                                          className="glamor-15 glamor-16 glamor-8"
                                                          height="1em"
                                                          style={Object {}}
                                                          viewBox={Object {}}
                                                          width="1em"
                                                        >
                                                          <use
                                                            href="#test"
                                                            xlinkHref="#test"
                                                          />
                                                        </svg>
                                                      </StyledSvg>
                                                    </InlineSvg>
                                                  </Component>
                                                </StyledChevronDown>
                                              </div>
                                            </Base>
                                          </Flex>
                                        </button>
                                      </Button>
                                    </Component>
                                  </StyledButton>
                                </DropdownButton>
                              </BuilderDropdownButton>
                            </div>
                          </div>
                        </Component>
                      </AutoCompleteRoot>
                    </DropdownMenu>
                  </AutoComplete>
                </DropdownAutoCompleteMenu>
              </DropdownAutoComplete>
            </div>
          </Base>
        </Flex>
        <RuleAddButton
          icon="icon-circle-add"
          onClick={[Function]}
          priority="primary"
        >
          <Button
            className="glamor-58 glamor-59"
            disabled={false}
            icon="icon-circle-add"
            onClick={[Function]}
            priority="primary"
          >
            <button
              className="glamor-58 glamor-59 button button-primary"
              disabled={false}
              onClick={[Function]}
              role="button"
            >
              <Flex
                align="center"
                className="button-label"
              >
                <Base
                  align="center"
                  className="button-label glamor-24"
                >
                  <div
                    className="button-label glamor-24"
                    is={null}
                  >
                    <Icon>
                      <Base
                        className="glamor-52 glamor-53"
                      >
                        <div
                          className="glamor-52 glamor-53"
                          is={null}
                        >
                          <StyledInlineSvg
                            size="16px"
                            src="icon-circle-add"
                          >
                            <InlineSvg
                              className="glamor-48 glamor-45"
                              size="16px"
                              src="icon-circle-add"
                            >
                              <StyledSvg
                                className="glamor-48 glamor-45"
                                height="16px"
                                style={Object {}}
                                viewBox={Object {}}
                                width="16px"
                              >
                                <svg
                                  className="glamor-45 glamor-46 glamor-8"
                                  height="16px"
                                  style={Object {}}
                                  viewBox={Object {}}
                                  width="16px"
                                >
                                  <use
                                    href="#test"
                                    xlinkHref="#test"
                                  />
                                </svg>
                              </StyledSvg>
                            </InlineSvg>
                          </StyledInlineSvg>
                        </div>
                      </Base>
                    </Icon>
                  </div>
                </Base>
              </Flex>
            </button>
          </Button>
        </RuleAddButton>
      </div>
    </BuilderBar>
  </RuleBuilder>
  <div
    onKeyDown={[Function]}
    style={
      Object {
        "position": "relative",
      }
    }
  >
    <TextareaAutosize
      autoCapitalize="off"
      autoComplete="off"
      autoCorrect="off"
      onChange={[Function]}
      placeholder="#example usage

path:src/example/pipeline/* person@sentry.io #infrastructure

url:http://example.com/settings/* #product"
      rows={1}
      spellCheck="false"
      style={
        Object {
          "border": "1 solid",
          "fontFamily": "Monaco, Consolas, \\"Courier New\\", monospace",
          "margin": 0,
          "minHeight": 140,
          "outline": 0,
          "overflow": "auto",
          "padding": "5px 5px 0",
          "resize": "none",
          "whiteSpace": "pre-wrap",
          "width": "100%",
          "wordBreak": "break-all",
        }
      }
      value="new"
    >
      <textarea
        autoCapitalize="off"
        autoComplete="off"
        autoCorrect="off"
        onChange={[Function]}
        placeholder="#example usage

path:src/example/pipeline/* person@sentry.io #infrastructure

url:http://example.com/settings/* #product"
        rows={1}
        spellCheck="false"
        style={
          Object {
            "border": "1 solid",
            "fontFamily": "Monaco, Consolas, \\"Courier New\\", monospace",
            "margin": 0,
            "minHeight": 140,
            "outline": 0,
            "overflow": "auto",
            "padding": "5px 5px 0",
            "resize": "none",
            "whiteSpace": "pre-wrap",
            "width": "100%",
            "wordBreak": "break-all",
          }
        }
        value="new"
      />
    </TextareaAutosize>
    <SaveButton>
      <div
        className="glamor-66 glamor-67"
      >
        <Button
          disabled={false}
          onClick={[Function]}
          priority="primary"
          size="small"
        >
          <button
            className="button button-primary button-sm"
            disabled={false}
            onClick={[Function]}
            role="button"
          >
            <Flex
              align="center"
              className="button-label"
            >
              <Base
                align="center"
                className="button-label glamor-24"
              >
                <div
                  className="button-label glamor-24"
                  is={null}
                >
                  Save Changes
                </div>
              </Base>
            </Flex>
          </button>
        </Button>
      </div>
    </SaveButton>
  </div>
</OwnerInput>
`;
